name: check DEB version in repo x64

on:
  workflow_dispatch:

jobs:
  test-install-deb-in-repo:
    runs-on: ubuntu-latest
    steps:
      - name: Install prerequisites for puppeteer tests
        run: |
          sudo apt-get update
          curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
          sudo apt-get install -y nodejs
          sudo apt-get install -y python3 python3-pip
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo dpkg -i google-chrome-stable_current_amd64.deb
          sudo apt-get install -f -y
          google-chrome --version
          python3 --version
          pip3 --version
          node -v
          npm -v

          mkdir -p ~/.ssh
          echo "${{ secrets.GIT_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          eval $(ssh-agent -s)
          ssh-add ~/.ssh/id_rsa
          ssh-keyscan git.onlyoffice.com >> ~/.ssh/known_hosts
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          git clone git@git.onlyoffice.com:ONLYOFFICE-QA/Dep.Tests.git
          cd Dep.Tests
          sed -i 's/url=https:\/\/github.com\/ONLYOFFICE-data\/pp-files.git/url = git@github.com:ONLYOFFICE-data\/pp-files.git/' .gitmodules
          git submodule update --init puppeteer/files
          cd puppeteer/engine
          npm install
          cp ../config_chrome_linux.json ../config_chrome_linux.json.bak

      - name: Install DigitalOcean CLI
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
  
      - name: Check existing Droplets
        run: |
            EXISTING_IDS=$(doctl compute droplet list --format ID,Name --no-header | awk '$2=="check-deb-in-repo" {print $1}')
            if [[ -n "$EXISTING_IDS" ]]; then
              echo "Existing Droplets found with name 'check-deb-in-repo'. Deleting..."
              doctl compute droplet delete $EXISTING_IDS --force
  
              while doctl compute droplet list --format Name --no-header | grep -q "check-deb-in-repo"; do
                echo "Waiting for existing Droplet to be deleted..."
                sleep 5
              done
            fi
  
      - name: Create Droplet
        run: |
            doctl compute droplet create check-deb-in-repo \
              --region fra1 \
              --size s-2vcpu-4gb \
              --project-id ${{ secrets.DIGITALOCEAN_PROJECT_ID }} \
              --image ubuntu-24-04-x64 \
              --ssh-keys ${{ secrets.DIGITALOCEAN_SSH_KEY_ID }} \
              --wait
            IP=$(doctl compute droplet list --format Name,PublicIPv4 --no-header | grep check-deb-in-repo | awk '{print $2}')
            echo "DROPLET_IP=$IP" >> $GITHUB_ENV
  
      - name: Wait for SSH to be Ready
        run: sleep 180
  
      - name: Add SSH Key
        run: |
            mkdir -p ~/.ssh
            echo "${{ secrets.DIGITALOCEAN_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
            chmod 600 ~/.ssh/id_rsa
            eval $(ssh-agent -s)
            ssh-add ~/.ssh/id_rsa

      - name: Upgrade DEB packages
        run: |
          ssh -o StrictHostKeyChecking=no root@${{ env.DROPLET_IP }} << 'EOF'
          sudo apt-get update
          sudo apt-get upgrade -y
          EOF
      
      - name: Install ONLYOFFICE-Docs EE and run test example
        run: |
          ssh -o StrictHostKeyChecking=no root@${{ env.DROPLET_IP }} << 'EOF'

          sudo apt-get install postgresql -y && \
          sudo -i -u postgres psql -c "CREATE USER onlyoffice WITH PASSWORD 'onlyoffice';" && \
          sudo -i -u postgres psql -c "CREATE DATABASE onlyoffice OWNER onlyoffice;" && \
          echo onlyoffice-documentserver-ee onlyoffice/db-pwd select onlyoffice | sudo debconf-set-selections

          sudo apt-get install redis-server -y

          sudo apt-get install rabbitmq-server -y

          mkdir -p -m 700 ~/.gnupg
          curl -fsSL https://download.onlyoffice.com/GPG-KEY-ONLYOFFICE | gpg --no-default-keyring --keyring gnupg-ring:/tmp/onlyoffice.gpg --import
          chmod 644 /tmp/onlyoffice.gpg
          sudo chown root:root /tmp/onlyoffice.gpg
          sudo mv /tmp/onlyoffice.gpg /usr/share/keyrings/onlyoffice.gpg

          echo "deb [signed-by=/usr/share/keyrings/onlyoffice.gpg] https://download.onlyoffice.com/repo/debian squeeze main" | sudo tee /etc/apt/sources.list.d/onlyoffice.list

          sudo apt-get update && \
          echo ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true | sudo debconf-set-selections && \
          sudo apt-get install ttf-mscorefonts-installer -y

          echo onlyoffice-documentserver-ee onlyoffice/wopi-enabled boolean true | sudo debconf-set-selections && \
          sudo apt-get install onlyoffice-documentserver-ee -y
          sudo systemctl start ds-example
          EOF

      - name: Info about installed Package, must be ONLYOFFICE-Docs EE
        run: |
          ssh -o StrictHostKeyChecking=no root@${{ env.DROPLET_IP }} << 'EOF'

          sudo apt-get install jq -y

          echo "Installed packages:"
          echo "-------------------------------------"
          sudo dpkg-query -l | grep onlyoffice-documentserver
          echo "-------------------------------------"
          echo "api.js from server:"
          echo "-------------------------------------"
          curl -s http://127.0.0.1/web-apps/apps/api/documents/api.js | head -n 10
          echo "-------------------------------------"
          echo "info.json from server(packageType must be 1):"
          echo "-------------------------------------"
          curl -s http://127.0.0.1:8000/info/info.json | jq
          echo "-------------------------------------"
          echo "check WOPI enabled(must be data except 404 Not Found):"
          echo "-------------------------------------"
          curl -s http://127.0.0.1/hosting/discovery
          echo "-------------------------------------"
          EOF

      - name: Smoke puppeteer API tests ONLYOFFICE-Docs EE
        run: |
          cd Dep.Tests/puppeteer/engine
          sed -i "s#\"url\": \"https://kim.teamlab.info/example\"#\"url\": \"http://${{ env.DROPLET_IP }}/example\"#" ../config_chrome_linux.json
          sed -i 's/"headless": false/"headless": true/' ../config_chrome_linux.json
          cat ../config_chrome_linux.json
          python3 run.py --prcache
          python3 run.py ../tests/desktop/word/smoke/open-close-file-tab.js --disable_animation
          python3 run.py ../tests/desktop/spreadsheets/smoke/smoke_test_spreadsheet_2.js --disable_animation
          python3 run.py ../tests/desktop/presentation/font/input_text_and_change_font.js --disable_animation
          python3 run.py ../tests/desktop/pdf/input/insert_stamp_save.js --disable_animation
          python3 run.py ../tests/desktop/pdf-form/field/insert_checkbox.js --disable_animation

      - name: Smoke puppeteer WOPI tests ONLYOFFICE-Docs EE
        run: |
          cd Dep.Tests/puppeteer/engine
          sed -i 's/"provider": *""/"provider": "wopi.js"/' ../config_chrome_linux.json
          sed -i "s#\"url\": \"https://kim.teamlab.info/example\"#\"url\": \"http://${{ env.DROPLET_IP }}/example\"#" ../providers/wopi/config.json
          cat ../config_chrome_linux.json
          cat ../providers/wopi/config.json
          python3 run.py --prcache
          python3 run.py ../tests/desktop/word/smoke/open-close-file-tab.js --disable_animation
          python3 run.py ../tests/desktop/spreadsheets/smoke/smoke_test_spreadsheet_2.js --disable_animation
          python3 run.py ../tests/desktop/presentation/font/input_text_and_change_font.js --disable_animation
          python3 run.py ../tests/desktop/pdf/input/insert_stamp_save.js --disable_animation
          python3 run.py ../tests/desktop/pdf-form/field/insert_checkbox.js --disable_animation

      - name: Remove ONLYOFFICE-Docs EE and Install ONLYOFFICE-Docs DE
        run: |
          ssh -o StrictHostKeyChecking=no root@${{ env.DROPLET_IP }} << 'EOF'
          printf "n/n" | sudo apt-get purge onlyoffice-documentserver* -y
          echo onlyoffice-documentserver-de onlyoffice/db-pwd select onlyoffice | sudo debconf-set-selections && \
          echo onlyoffice-documentserver-de onlyoffice/wopi-enabled boolean true | sudo debconf-set-selections && \
          printf "n/n" | sudo apt-get install onlyoffice-documentserver-de -y && \
          sudo systemctl start ds-example
          EOF

      - name: Info about installed Package, must be ONLYOFFICE-Docs DE
        run: |
          ssh -o StrictHostKeyChecking=no root@${{ env.DROPLET_IP }} << 'EOF'
          echo "Installed packages:"
          echo "-------------------------------------"
          sudo dpkg-query -l | grep onlyoffice-documentserver
          echo "-------------------------------------"
          echo "api.js from server:"
          echo "-------------------------------------"
          curl -s http://127.0.0.1/web-apps/apps/api/documents/api.js | head -n 10
          echo "-------------------------------------"
          echo "info.json from server(packageType must be 2):"
          echo "-------------------------------------"
          curl -s http://127.0.0.1:8000/info/info.json | jq
          echo "-------------------------------------"
          echo "check WOPI enabled(must be data except 404 Not Found):"
          echo "-------------------------------------"
          curl -s http://127.0.0.1/hosting/discovery
          echo "-------------------------------------"
          EOF

      - name: Smoke puppeteer API tests ONLYOFFICE-Docs DE
        run: |
          cd Dep.Tests/puppeteer/engine
          sed -i 's/"provider": *"wopi\.js"/"provider": ""/' ../config_chrome_linux.json
          cat ../config_chrome_linux.json
          python3 run.py --prcache
          python3 run.py ../tests/desktop/word/smoke/open-close-file-tab.js --disable_animation
          python3 run.py ../tests/desktop/spreadsheets/smoke/smoke_test_spreadsheet_2.js --disable_animation
          python3 run.py ../tests/desktop/presentation/font/input_text_and_change_font.js --disable_animation
          python3 run.py ../tests/desktop/pdf/input/insert_stamp_save.js --disable_animation
          python3 run.py ../tests/desktop/pdf-form/field/insert_checkbox.js --disable_animation
  
      - name: Smoke puppeteer WOPI tests ONLYOFFICE-Docs DE
        run: |
          cd Dep.Tests/puppeteer/engine
          sed -i 's/"provider": *""/"provider": "wopi.js"/' ../config_chrome_linux.json
          cat ../config_chrome_linux.json
          python3 run.py --prcache
          python3 run.py ../tests/desktop/word/smoke/open-close-file-tab.js --disable_animation
          python3 run.py ../tests/desktop/spreadsheets/smoke/smoke_test_spreadsheet_2.js --disable_animation
          python3 run.py ../tests/desktop/presentation/font/input_text_and_change_font.js --disable_animation
          python3 run.py ../tests/desktop/pdf/input/insert_stamp_save.js --disable_animation
          python3 run.py ../tests/desktop/pdf-form/field/insert_checkbox.js --disable_animation

      - name: Remove ONLYOFFICE-Docs DE and Install ONLYOFFICE-Docs CE
        run: |
          ssh -o StrictHostKeyChecking=no root@${{ env.DROPLET_IP }} << 'EOF'
          printf "n/n" | sudo apt-get purge onlyoffice-documentserver* -y
          echo onlyoffice-documentserver onlyoffice/db-pwd select onlyoffice | sudo debconf-set-selections && \
          echo onlyoffice-documentserver onlyoffice/wopi-enabled boolean true | sudo debconf-set-selections && \
          printf "n/n" | sudo apt-get install onlyoffice-documentserver -y && \
          sudo systemctl start ds-example
          EOF

      - name: Info about installed Package, must be ONLYOFFICE-Docs CE
        run: |
          ssh -o StrictHostKeyChecking=no root@${{ env.DROPLET_IP }} << 'EOF'
          echo "Installed packages:"
          echo "-------------------------------------"
          sudo dpkg-query -l | grep onlyoffice-documentserver
          echo "-------------------------------------"
          echo "api.js from server:"
          echo "-------------------------------------"
          curl -s http://127.0.0.1/web-apps/apps/api/documents/api.js | head -n 10
          echo "-------------------------------------"
          echo "info.json from server(packageType must be 0):"
          echo "-------------------------------------"
          curl -s http://127.0.0.1:8000/info/info.json | jq
          echo "-------------------------------------"
          echo "check WOPI enabled(must be data except 404 Not Found):"
          echo "-------------------------------------"
          curl -s http://127.0.0.1/hosting/discovery
          echo "-------------------------------------"
          EOF

      - name: Smoke puppeteer API tests ONLYOFFICE-Docs CE
        run: |
          cd Dep.Tests/puppeteer/engine
          sed -i 's/"provider": *"wopi\.js"/"provider": ""/' ../config_chrome_linux.json
          cat ../config_chrome_linux.json
          python3 run.py --prcache
          python3 run.py ../tests/desktop/word/smoke/open-close-file-tab.js --disable_animation
          python3 run.py ../tests/desktop/spreadsheets/smoke/smoke_test_spreadsheet_2.js --disable_animation
          python3 run.py ../tests/desktop/presentation/font/input_text_and_change_font.js --disable_animation
          python3 run.py ../tests/desktop/pdf/input/insert_stamp_save.js --disable_animation
          python3 run.py ../tests/desktop/pdf-form/field/insert_checkbox.js --disable_animation
  
      - name: Smoke puppeteer WOPI tests ONLYOFFICE-Docs CE
        run: |
          cd Dep.Tests/puppeteer/engine
          sed -i 's/"provider": *""/"provider": "wopi.js"/' ../config_chrome_linux.json
          cat ../config_chrome_linux.json
          python3 run.py --prcache
          python3 run.py ../tests/desktop/word/smoke/open-close-file-tab.js --disable_animation
          python3 run.py ../tests/desktop/spreadsheets/smoke/smoke_test_spreadsheet_2.js --disable_animation
          python3 run.py ../tests/desktop/presentation/font/input_text_and_change_font.js --disable_animation
          python3 run.py ../tests/desktop/pdf/input/insert_stamp_save.js --disable_animation
          python3 run.py ../tests/desktop/pdf-form/field/insert_checkbox.js --disable_animation

      - name: Delete Droplet
        run: doctl compute droplet delete check-deb-in-repo --force