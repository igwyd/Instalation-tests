name: check RPM release x64

on:
  workflow_dispatch:

jobs:
  test-install-rpm-in-repo:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install prerequisites for puppeteer tests
        run: |
          sudo apt-get update
          curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
          sudo apt-get install -y nodejs
          sudo apt-get install -y python3 python3-pip
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo dpkg -i google-chrome-stable_current_amd64.deb
          sudo apt-get install -f -y
          google-chrome --version
          python3 --version
          pip3 --version
          node -v
          npm -v

          mkdir -p ~/.ssh
          echo "${{ secrets.GIT_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          eval $(ssh-agent -s)
          ssh-add ~/.ssh/id_rsa
          ssh-keyscan git.onlyoffice.com >> ~/.ssh/known_hosts
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          git clone git@git.onlyoffice.com:ONLYOFFICE-QA/Dep.Tests.git
          cd Dep.Tests
          sed -i 's/url=https:\/\/github.com\/ONLYOFFICE-data\/pp-files.git/url = git@github.com:ONLYOFFICE-data\/pp-files.git/' .gitmodules
          git submodule update --init puppeteer/files
          cd puppeteer/engine
          npm install
          cp ../config_chrome_linux.json ../config_chrome_linux.json.bak

      - name: Install DigitalOcean CLI
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Create Droplet
        run: |
          doctl compute droplet create check-rpm-in-repo \
            --region fra1 \
            --size s-2vcpu-4gb \
            --project-id ${{ secrets.DIGITALOCEAN_PROJECT_ID }} \
            --image centos-stream-9-x64 \
            --ssh-keys ${{ secrets.DIGITALOCEAN_SSH_KEY_ID }} \
            --wait
          IP=$(doctl compute droplet list --format Name,PublicIPv4 --no-header | grep check-rpm-in-repo | awk '{print $2}')
          echo "DROPLET_IP=$IP" >> $GITHUB_ENV

      - name: Wait for SSH to be Ready
        run: sleep 180
  
      - name: Add SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DIGITALOCEAN_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          eval $(ssh-agent -s)
          ssh-add ~/.ssh/id_rsa

      - name: Upgrade RPM packages
        run: |
          ssh -o StrictHostKeyChecking=no root@${{ env.DROPLET_IP }} << 'EOF'
          sudo dnf -y clean all
          sudo dnf upgrade -y
          EOF

      - name: Install ONLYOFFICE-Docs EE and run test example
        run: |
          scp -o StrictHostKeyChecking=no rpm-check-configs/nginx.repo root@${{ env.DROPLET_IP }}:/etc/yum.repos.d/nginx.repo
          ssh -o StrictHostKeyChecking=no root@${{ env.DROPLET_IP }} << 'EOF'
          sudo yum install nginx -y
          EOF
          scp -o StrictHostKeyChecking=no rpm-check-configs/nginx.conf root@${{ env.DROPLET_IP }}:/etc/nginx/nginx.conf
          ssh -o StrictHostKeyChecking=no root@${{ env.DROPLET_IP }} << 'EOF'
          sudo yum install epel-release -y

          sudo yum install postgresql postgresql-server -y
          sudo service postgresql initdb
          sudo yum install chkconfig -y
          sudo chkconfig postgresql on
          sed -i '86s/\<ident\>/scram-sha-256/;88s/\<ident\>/scram-sha-256/' /var/lib/pgsql/data/pg_hba.conf
          sed -i "s/^#\?password_encryption *= *.*/password_encryption = 'scram-sha-256'/" /var/lib/pgsql/data/postgresql.conf
          sudo service postgresql restart
          cd /tmp
          sudo -i -u postgres psql -c "CREATE USER onlyoffice WITH PASSWORD 'onlyoffice';"
          sudo -i -u postgres psql -c "CREATE DATABASE onlyoffice OWNER onlyoffice;"

          sudo yum -y install redis
          sudo systemctl enable --now redis

          sudo curl -s https://packagecloud.io/install/repositories/rabbitmq/rabbitmq-server/script.rpm.sh | os=centos dist=9 sudo bash
          sudo curl -s https://packagecloud.io/install/repositories/rabbitmq/erlang/script.rpm.sh | os=centos dist=9 sudo bash
          sudo yum install rabbitmq-server -y
          sudo systemctl enable --now rabbitmq-server

          sudo yum install https://download.onlyoffice.com/repo/centos/main/noarch/onlyoffice-repo.noarch.rpm -y

          sudo yum install cabextract xorg-x11-font-utils -y
          sudo yum install fontconfig -y
          sudo rpm -i https://sourceforge.net/projects/mscorefonts2/files/rpms/msttcore-fonts-installer-2.6-1.noarch.rpm

          sudo yum install onlyoffice-documentserver-ee -y

          sudo service nginx start
          sudo systemctl enable nginx

          printf 'localhost\nonlyoffice\nonlyoffice\nonlyoffice\nlocalhost\nlocalhost\nguest\nguest\n' | sudo documentserver-configure.sh --wopienabled true

          sudo firewall-cmd --zone=public --add-port=80/tcp --permanent
          sudo firewall-cmd --reload

          sudo systemctl start ds-example
          EOF

      - name: Info about installed Package, must be ONLYOFFICE-Docs EE
        run: |
          ssh -o StrictHostKeyChecking=no root@${{ env.DROPLET_IP }} << 'EOF'

          sudo dnf install jq -y

          echo "Installed packages:"
          echo "-------------------------------------"
          sudo rpm -qa | grep onlyoffice-documentserver
          echo "-------------------------------------"
          echo "api.js from server:"
          echo "-------------------------------------"
          curl -s http://127.0.0.1/web-apps/apps/api/documents/api.js | head -n 10
          echo "-------------------------------------"
          echo "info.json from server(packageType must be 1):"
          echo "-------------------------------------"
          curl -s http://127.0.0.1:8000/info/info.json | jq | grep -i -e buildVersion -e buildNumber -e packageType
          echo "-------------------------------------"
          echo "check WOPI enabled(must be data except 404 Not Found):"
          echo "-------------------------------------"
          output=$(curl -s http://127.0.0.1/hosting/discovery)
          if echo "$output" | grep -q 'value='; then
            echo "$output" | grep -o 'value="[^"]*"' | head -n 5 | cut -c1-100
          else
            echo "$output"
          fi
          echo "-------------------------------------"
          EOF

      - name: Smoke puppeteer API tests ONLYOFFICE-Docs EE
        run: |
          cd Dep.Tests/puppeteer/engine
          sed -i "s#\"url\": \"https://doc-linux.teamlab.info/example\"#\"url\": \"http://${{ env.DROPLET_IP }}/example\"#" ../config_chrome_linux.json
          sed -i 's/"headless": false/"headless": true/' ../config_chrome_linux.json
          cat ../config_chrome_linux.json
          python3 run.py --prcache
          python3 run.py ../tests/desktop/word/smoke/open-close-file-tab.js --disable_animation

      - name: Smoke puppeteer WOPI tests ONLYOFFICE-Docs EE
        run: |
          cd Dep.Tests/puppeteer/engine
          sed -i 's/"provider": *""/"provider": "wopi.js"/' ../config_chrome_linux.json
          sed -i "s#\"url\": \"https://doc-linux.teamlab.info/example\"#\"url\": \"http://${{ env.DROPLET_IP }}/example\"#" ../providers/wopi/config.json
          cat ../config_chrome_linux.json
          cat ../providers/wopi/config.json
          python3 run.py --prcache
          python3 run.py ../tests/desktop/word/smoke/open-close-file-tab.js --disable_animation

      - name: Remove ONLYOFFICE-Docs EE and Install ONLYOFFICE-Docs DE
        run: |
          ssh -o StrictHostKeyChecking=no root@${{ env.DROPLET_IP }} << 'EOF'
          sudo yum remove onlyoffice-documentserver-ee -y
          sudo yum install onlyoffice-documentserver-de -y
          sudo service nginx start
          sudo systemctl enable nginx
          printf 'localhost\nonlyoffice\nonlyoffice\nonlyoffice\nlocalhost\nlocalhost\nguest\nguest\n' | sudo documentserver-configure.sh --wopienabled true
          sudo systemctl start ds-example
          EOF

      - name: Info about installed Package, must be ONLYOFFICE-Docs DE
        run: |
          ssh -o StrictHostKeyChecking=no root@${{ env.DROPLET_IP }} << 'EOF'
          echo "Installed packages:"
          echo "-------------------------------------"
          sudo rpm -qa | grep onlyoffice-documentserver
          echo "-------------------------------------"
          echo "api.js from server:"
          echo "-------------------------------------"
          curl -s http://127.0.0.1/web-apps/apps/api/documents/api.js | head -n 10
          echo "-------------------------------------"
          echo "info.json from server(packageType must be 2):"
          echo "-------------------------------------"
          curl -s http://127.0.0.1:8000/info/info.json | jq | grep -i -e buildVersion -e buildNumber -e packageType
          echo "-------------------------------------"
          echo "check WOPI enabled(must be data except 404 Not Found):"
          echo "-------------------------------------"
          output=$(curl -s http://127.0.0.1/hosting/discovery)
          if echo "$output" | grep -q 'value='; then
            echo "$output" | grep -o 'value="[^"]*"' | head -n 5 | cut -c1-100
          else
            echo "$output"
          fi
          echo "-------------------------------------"
          EOF

      - name: Smoke puppeteer API tests ONLYOFFICE-Docs DE
        run: |
          cd Dep.Tests/puppeteer/engine
          sed -i 's/"provider": *"wopi\.js"/"provider": ""/' ../config_chrome_linux.json
          cat ../config_chrome_linux.json
          python3 run.py --prcache
          python3 run.py ../tests/desktop/word/smoke/open-close-file-tab.js --disable_animation

      - name: Smoke puppeteer WOPI tests ONLYOFFICE-Docs DE
        run: |
          cd Dep.Tests/puppeteer/engine
          sed -i 's/"provider": *""/"provider": "wopi.js"/' ../config_chrome_linux.json
          cat ../config_chrome_linux.json
          python3 run.py --prcache
          python3 run.py ../tests/desktop/word/smoke/open-close-file-tab.js --disable_animation

      - name: Remove ONLYOFFICE-Docs DE and Install ONLYOFFICE-Docs CE
        run: |
          ssh -o StrictHostKeyChecking=no root@${{ env.DROPLET_IP }} << 'EOF'
          sudo yum remove onlyoffice-documentserver* -y
          sudo yum install onlyoffice-documentserver -y
          sudo service nginx start
          sudo systemctl enable nginx
          printf 'localhost\nonlyoffice\nonlyoffice\nonlyoffice\nlocalhost\nguest\nguest\n' | sudo documentserver-configure.sh --wopienabled true
          sudo systemctl start ds-example
          EOF

      - name: Info about installed Package, must be ONLYOFFICE-Docs CE
        run: |
          ssh -o StrictHostKeyChecking=no root@${{ env.DROPLET_IP }} << 'EOF'
          echo "Installed packages:"
          echo "-------------------------------------"
          sudo rpm -qa | grep onlyoffice-documentserver
          echo "-------------------------------------"
          echo "api.js from server:"
          echo "-------------------------------------"
          curl -s http://127.0.0.1/web-apps/apps/api/documents/api.js | head -n 10
          echo "-------------------------------------"
          echo "info.json from server(packageType must be 0):"
          echo "-------------------------------------"
          curl -s http://127.0.0.1:8000/info/info.json | jq | grep -i -e buildVersion -e buildNumber -e packageType
          echo "-------------------------------------"
          echo "check WOPI enabled(must be data except 404 Not Found):"
          echo "-------------------------------------"
          output=$(curl -s http://127.0.0.1/hosting/discovery)
          if echo "$output" | grep -q 'value='; then
            echo "$output" | grep -o 'value="[^"]*"' | head -n 5 | cut -c1-100
          else
            echo "$output"
          fi
          echo "-------------------------------------"
          EOF

      - name: Smoke puppeteer API tests ONLYOFFICE-Docs CE
        run: |
          cd Dep.Tests/puppeteer/engine
          sed -i 's/"provider": *"wopi\.js"/"provider": ""/' ../config_chrome_linux.json
          cat ../config_chrome_linux.json
          python3 run.py --prcache
          python3 run.py ../tests/desktop/word/smoke/open-close-file-tab.js --disable_animation

      - name: Smoke puppeteer WOPI tests ONLYOFFICE-Docs CE
        run: |
          cd Dep.Tests/puppeteer/engine
          sed -i 's/"provider": *""/"provider": "wopi.js"/' ../config_chrome_linux.json
          cat ../config_chrome_linux.json
          python3 run.py --prcache
          python3 run.py ../tests/desktop/word/smoke/open-close-file-tab.js --disable_animation

      - name: Delete Droplet
        run: doctl compute droplet delete check-rpm-in-repo --force