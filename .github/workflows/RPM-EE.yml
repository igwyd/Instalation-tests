name: ONLYOFFICE-EE RPM Install on DO centos-stream-9-x64

on:
  schedule:
    - cron: '0 12 * * 3'  # Wednesday 15:00 Mosсow time (UTC+3)
#  push:
#    branches:
#      - main
#  pull_request:
#    branches:
#      - main
  workflow_dispatch:

jobs:
  test-install:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install DigitalOcean CLI
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Check existing Droplets
        run: |
          EXISTING_IDS=$(doctl compute droplet list --format ID,Name --no-header | awk '$2=="onlyoffice-ee-rpm-check" {print $1}')
          if [[ -n "$EXISTING_IDS" ]]; then
            echo "Existing Droplets found with name 'onlyoffice-ee-rpm-check'. Deleting..."
            doctl compute droplet delete $EXISTING_IDS --force

            while doctl compute droplet list --format Name --no-header | grep -q "onlyoffice-ee-rpm-check"; do
              echo "Waiting for existing Droplet to be deleted..."
              sleep 5
            done
          fi

      - name: Create Droplet
        run: |
          doctl compute droplet create onlyoffice-ee-rpm-check \
            --region fra1 \
            --size s-2vcpu-4gb \
            --project-id ${{ secrets.DIGITALOCEAN_PROJECT_ID }} \
            --image centos-stream-9-x64 \
            --ssh-keys ${{ secrets.DIGITALOCEAN_SSH_KEY_ID }} \
            --wait
          IP=$(doctl compute droplet list --format Name,PublicIPv4 --no-header | grep onlyoffice-ee-rpm-check | awk '{print $2}')
          echo "DROPLET_IP=$IP" >> $GITHUB_ENV

      - name: Wait for SSH to be Ready
        run: sleep 180

      - name: Add SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DIGITALOCEAN_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          eval $(ssh-agent -s)
          ssh-add ~/.ssh/id_rsa

      - name: Upgrade RPM packages
        run: |
          ssh -o StrictHostKeyChecking=no root@${{ env.DROPLET_IP }} << 'EOF'
          sudo dnf -y clean all
          sudo dnf -y update
          sudo dnf install wget -y
          EOF
      
      - name: Install ONLYOFFICE and run test example
        run: |
          ssh -o StrictHostKeyChecking=no root@${{ env.DROPLET_IP }} << 'EOF'
          wget https://download.onlyoffice.com/docs/docs-enterprise-install.sh
          sudo dnf config-manager --add-repo https://s3.eu-west-1.amazonaws.com/repo-doc-onlyoffice-com/repo/centos/onlyoffice-dev-8.3.2.repo
          printf "n\n" | sudo bash docs-enterprise-install.sh
          sudo systemctl start ds-example
          EOF

      - name: Info about installed Package
        run: |
          ssh -o StrictHostKeyChecking=no root@${{ env.DROPLET_IP }} << 'EOF'
          sudo rpm -qa | grep onlyoffice-documentserver
          EOF

      - name: Install prerequisites for puppeteer tests
        run: |
          sudo apt-get update
          curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
          sudo apt-get install -y nodejs
          sudo apt-get install -y python3 python3-pip
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo dpkg -i google-chrome-stable_current_amd64.deb
          sudo apt-get install -f -y
          google-chrome --version
          python3 --version
          pip3 --version
          node -v
          npm -v

          echo "${{ secrets.GIT_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan git.onlyoffice.com >> ~/.ssh/known_hosts
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          git clone git@git.onlyoffice.com:ONLYOFFICE-QA/Dep.Tests.git
          cd Dep.Tests
          sed -i 's/url=https:\/\/github.com\/ONLYOFFICE-data\/pp-files.git/url = git@github.com:ONLYOFFICE-data\/pp-files.git/' .gitmodules
          git submodule update --init puppeteer/files
          sed -i "s#\"url\": \"https://kim.teamlab.info/example\"#\"url\": \"http://${{ env.DROPLET_IP }}/example\"#" puppeteer/config_chrome_linux.json
          sed -i 's/"headless": false/"headless": true/' puppeteer/config_chrome_linux.json
          cd puppeteer/engine
          npm install
          cat ../config_chrome_linux.json

      - name: Smoke puppeteer test
        run: |
          cd Dep.Tests/puppeteer/engine
          python3 run.py --prcache
          python3 run.py ../tests/desktop/word/smoke/open-close-file-tab.js
          python3 run.py ../tests/desktop/cell/smoke/smoke_test_spreadsheet.js
          python3 run.py ../tests/desktop/pdf/smoke/download-pdf-check-text.js
          

      - name: Delete Droplet
        run: doctl compute droplet delete onlyoffice-ee-rpm-check --force