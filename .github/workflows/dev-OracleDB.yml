name: dev OracleDB load test

on:
  workflow_dispatch:

jobs:
  oracle-test:
    runs-on: ubuntu-latest
    services:
      oracledb:
        image: gvenzl/oracle-xe:21-slim
        env:
          ORACLE_PASSWORD: admin
          ORACLE_DATABASE: onlyoffice
          APP_USER: onlyoffice
          APP_USER_PASSWORD: onlyoffice
        ports:
          - 1521:1521

      onlyoffice:
        image: onlyoffice/4testing-documentserver-ee:${{ vars.ONLYOFFICE_VERSION }}.${{ vars.ONLYOFFICE_BUILD }}
        env:
          DB_TYPE: oracle
          DB_HOST: oracledb
          DB_PORT: 1521
          DB_NAME: onlyoffice
          DB_USER: onlyoffice
          DB_PWD: onlyoffice
          WOPI_ENABLED: true
          JWT_SECRET: MYSECRET
        ports:
          - 80:80

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: docker containers status
        run: |
          docker ps -a

      - name: Wait for Oracle DB and ONLYOFFICE to be ready
        run: sleep 300

      - name: Define ONLYOFFICE container name
        run: |
          ONLYOFFICE_CONTAINER_NAME=$(docker ps -a --filter "ancestor=onlyoffice/4testing-documentserver-ee:${{ vars.ONLYOFFICE_VERSION }}.${{ vars.ONLYOFFICE_BUILD }}" --format "{{.Names}}")
          echo "Container name: $ONLYOFFICE_CONTAINER_NAME"
          echo "ONLYOFFICE_CONTAINER_NAME=$ONLYOFFICE_CONTAINER_NAME" >> $GITHUB_ENV

      - name: Run test in a container
        run: |
          docker run --rm \
            --network ${{ job.services.onlyoffice.network }} \
            curlimages/curl:8.9.1 \
            curl -vk http://onlyoffice/healthcheck

      - name: Add document, dummy_end_points and license for tests
        run: |
          docker exec $ONLYOFFICE_CONTAINER_NAME wget -O /var/www/onlyoffice/documentserver/sample.zip https://nct2.onlyoffice.com/s/y-3qCyC7GkMcYv8
          docker exec $ONLYOFFICE_CONTAINER_NAME unzip /var/www/onlyoffice/documentserver/sample.zip -d /var/www/onlyoffice/documentserver/
          docker cp performance-test/local-production-linux.json $ONLYOFFICE_CONTAINER_NAME:/etc/onlyoffice/documentserver/local-production-linux.json
          docker exec $ONLYOFFICE_CONTAINER_NAME supervisorctl restart ds:docservice
          docker exec $ONLYOFFICE_CONTAINER_NAME supervisorctl restart ds:converter
          
          echo "${{ secrets.LICENSE_KEY }}" > license.lic
          docker cp license.lic $ONLYOFFICE_CONTAINER_NAME:/var/www/onlyoffice/Data/license.lic

          echo '--- JSON  ---'
          docker exec $ONLYOFFICE_CONTAINER_NAME cat /etc/onlyoffice/documentserver/local-production-linux.json
          echo '--- Sample.docx in documentserver ---'
          docker exec $ONLYOFFICE_CONTAINER_NAME ls /var/www/onlyoffice/documentserver/
          echo '--- license ---'
          docker exec $ONLYOFFICE_CONTAINER_NAME ls /var/www/onlyoffice/Data/

      - name: Install pre-requisites for Load test
        run: |
          git clone https://github.com/ONLYOFFICE/document-server-stress-testing.git -b ${{ vars.K6_BRANCH }}
          cd document-server-stress-testing/K6/

          sed -i 's|"serverNameOrIp": "localhost"|"serverNameOrIp": "onlyoffice"|' save-changes-document-random-close.json
          sed -i 's|"documentUrl": "https://example.com/url-to-example-document"|"documentUrl": "http://onlyoffice/wopi/files/docid/contents"|' save-changes-document-random-close.json
          sed -i 's|"callbackUrl": "https://example.com/url-to-callback"|"callbackUrl": "http://onlyoffice/dummyCallback"|' save-changes-document-random-close.json
          sed -i 's|"jwtSecret": ""|"jwtSecret": "MYSECRET"|' save-changes-document-random-close.json

          echo "------ Updated json ------"
          cat save-changes-document-random-close.json

      - name: Run K6 load test
        working-directory: document-server-stress-testing/K6
        run: |
          docker run --rm \
            -u "$(id -u):$(id -g)" \
            --network ${{ job.services.onlyoffice.network }} \
            -v "$(pwd)":/k6 \
            grafana/k6 run /k6/save-changes-document-random-close.js \
            --log-output=file=/k6/k6.log \
            --quiet \
            -s "1m:18" -s "9m:18"

      - name: Show k6 log
        working-directory: document-server-stress-testing/K6
        run: |
          cat k6.log