name: check DEB version in repo arm64

on:
  workflow_dispatch:

jobs:
  test-install-deb-in-repo-arm64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install prerequisites for puppeteer tests
        run: |
          sudo apt-get update
          sudo apt-get install jq -y
          curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
          sudo apt-get install -y nodejs
          sudo apt-get install -y python3 python3-pip
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo dpkg -i google-chrome-stable_current_amd64.deb
          sudo apt-get install -f -y
          google-chrome --version
          python3 --version
          pip3 --version
          node -v
          npm -v

          mkdir -p ~/.ssh
          echo "${{ secrets.GIT_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          eval $(ssh-agent -s)
          ssh-add ~/.ssh/id_rsa
          ssh-keyscan git.onlyoffice.com >> ~/.ssh/known_hosts
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          git clone git@git.onlyoffice.com:ONLYOFFICE-QA/Dep.Tests.git
          cd Dep.Tests
          sed -i 's/url=https:\/\/github.com\/ONLYOFFICE-data\/pp-files.git/url = git@github.com:ONLYOFFICE-data\/pp-files.git/' .gitmodules
          git submodule update --init puppeteer/files
          cd puppeteer/engine
          npm install
          cp ../config_chrome_linux.json ../config_chrome_linux.json.bak

      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region us-east-1

      - name: Create EC2 Instance
        run: |
          INSTANCE_ID=$(aws ec2 run-instances \
            --image-id ami-0a7a4e87939439934 \
            --instance-type t4g.medium \
            --key-name demin \
            --security-groups AllPortsOpened \
            --tag-specifications 'ResourceType=instance,Tags=[{Key=Name,Value=onlyoffice-de-deb-check}]' \
            --block-device-mappings '[{"DeviceName":"/dev/sda1","Ebs":{"VolumeSize":50,"VolumeType":"gp3"}}]' \
            --query "Instances[0].InstanceId" --output text)
          
          echo "INSTANCE_ID=$INSTANCE_ID" >> $GITHUB_ENV
          echo "Waiting for instance to start..."
          aws ec2 wait instance-running --instance-ids $INSTANCE_ID

      - name: Get EC2 Public IP
        run: |
          IP=$(aws ec2 describe-instances \
            --instance-ids ${{ env.INSTANCE_ID }} \
            --query "Reservations[].Instances[].PublicIpAddress" --output text)
          echo "EC2 Public IP: $IP"
          echo "EC2_IP=$IP" >> $GITHUB_ENV

      - name: Wait for SSH to be Ready
        run: sleep 180

      - name: Add SSH Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.AWS_SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          eval $(ssh-agent -s)
          ssh-add ~/.ssh/id_rsa

      - name: Upgrade DEB packages
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ env.EC2_IP }} << 'EOF'
          sudo apt-get update && \
          sudo apt-get upgrade -y
          EOF

      - name: Install ONLYOFFICE-Docs EE and run test example
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ env.EC2_IP }} << 'EOF'

          sudo apt-get install postgresql -y && \
          sudo -i -u postgres psql -c "CREATE USER onlyoffice WITH PASSWORD 'onlyoffice';" && \
          sudo -i -u postgres psql -c "CREATE DATABASE onlyoffice OWNER onlyoffice;" && \
          echo onlyoffice-documentserver-ee onlyoffice/db-pwd select onlyoffice | sudo debconf-set-selections

          sudo apt-get install redis-server -y

          sudo apt-get install rabbitmq-server -y

          mkdir -p -m 700 ~/.gnupg
          curl -fsSL https://download.onlyoffice.com/GPG-KEY-ONLYOFFICE | gpg --no-default-keyring --keyring gnupg-ring:/tmp/onlyoffice.gpg --import
          chmod 644 /tmp/onlyoffice.gpg
          sudo chown root:root /tmp/onlyoffice.gpg
          sudo mv /tmp/onlyoffice.gpg /usr/share/keyrings/onlyoffice.gpg

          echo "deb [signed-by=/usr/share/keyrings/onlyoffice.gpg] https://download.onlyoffice.com/repo/debian squeeze main" | sudo tee /etc/apt/sources.list.d/onlyoffice.list

          sudo apt-get update && \
          echo ttf-mscorefonts-installer msttcorefonts/accepted-mscorefonts-eula select true | sudo debconf-set-selections && \
          sudo apt-get install ttf-mscorefonts-installer -y

          echo onlyoffice-documentserver-ee onlyoffice/wopi-enabled boolean true | sudo debconf-set-selections && \
          sudo apt-get install onlyoffice-documentserver-ee -y
          sudo systemctl start ds-example
          EOF

      - name: Info about installed Package, must be ONLYOFFICE-Docs EE
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ env.DROPLET_IP }} << 'EOF'
          echo "Installed packages:"
          echo "-------------------------------------"
          sudo dpkg-query -l | grep onlyoffice-documentserver
          echo "-------------------------------------"
          echo "api.js from server:"
          echo "-------------------------------------"
          curl -s http://127.0.0.1/web-apps/apps/api/documents/api.js | head -n 10
          echo "-------------------------------------"
          echo "info.json from server(packageType must be 1):"
          echo "-------------------------------------"
          curl -s http://127.0.0.1:8000/info/info.json | jq
          echo "-------------------------------------"
          EOF

      - name: Smoke puppeteer API tests ONLYOFFICE-Docs EE
        run: |
          cd Dep.Tests/puppeteer/engine
          sed -i "s#\"url\": \"https://kim.teamlab.info/example\"#\"url\": \"http://${{ env.DROPLET_IP }}/example\"#" ../config_chrome_linux.json
          sed -i 's/"headless": false/"headless": true/' ../config_chrome_linux.json
          cat ../config_chrome_linux.json
          python3 run.py --prcache
          python3 run.py ../tests/desktop/word/smoke/open-close-file-tab.js
          python3 run.py ../tests/desktop/cell/smoke/smoke_test_spreadsheet_2.js
          python3 run.py ../tests/desktop/pptx/font/input_text_and_change_font.js
          python3 run.py ../tests/desktop/pdf/smoke/download-pdf-check-text.js

      - name: Smoke puppeteer WOPI tests ONLYOFFICE-Docs EE
        run: |
          cd Dep.Tests/puppeteer/engine
          sed -i 's/"provider": *""/"provider": "wopi.js"/' ../config_chrome_linux.json
          sed -i "s#\"url\": \"https://isa2.teamlab.info/example\"#\"url\": \"http://${{ env.DROPLET_IP }}/example\"#" ../providers/wopi/config.json
          cat ../config_chrome_linux.json
          cat ../providers/wopi/config.json
          python3 run.py --prcache
          python3 run.py ../tests/desktop/word/smoke/open-close-file-tab.js
          python3 run.py ../tests/desktop/cell/smoke/smoke_test_spreadsheet_2.js
          python3 run.py ../tests/desktop/pptx/font/input_text_and_change_font.js
          python3 run.py ../tests/desktop/pdf/smoke/download-pdf-check-text.js